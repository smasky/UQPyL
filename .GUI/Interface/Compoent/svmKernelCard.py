from PySide6.QtCore import Qt,QPointF
from PySide6.QtGui import QDoubleValidator,QPainter,QPen,QColor
from PySide6.QtWidgets import QWidget,QVBoxLayout,QHBoxLayout,QFrame,QSizePolicy
from qfluentwidgets import ComboBox,BodyLabel,LineEdit,SwitchButton,PillPushButton,FlowLayout,SpinBox

class GasCard(QFrame):
    def __init__(self, parent=None):
        super().__init__(parent)
        self.setObjectName("KernelView");self.setContentsMargins(5,0,5,5)
        self.leftLayout=QVBoxLayout(self);self.leftLayout.setAlignment(Qt.AlignmentFlag.AlignTop)
        self.title=BodyLabel("Kernel Parameter Card");self.title.setObjectName('CardTitle')
        self.leftLayout.addWidget(self.title,alignment=Qt.AlignmentFlag.AlignHCenter)
        
        hBoxLayout=QHBoxLayout()
        hBoxLayout.addSpacing(20);hBoxLayout.addStretch(1)
        title=BodyLabel("Gamma:");title.setObjectName('ChooseTitle')
        hBoxLayout.addWidget(title,alignment=Qt.AlignmentFlag.AlignHCenter)
        self.lengthLineEdit=LineEdit(self)
        self.lengthLineEdit.setValidator(QDoubleValidator())
        self.lengthLineEdit.setMaximumWidth(100);self.lengthLineEdit.setText("1.00")
        hBoxLayout.addWidget(self.lengthLineEdit,alignment=Qt.AlignmentFlag.AlignHCenter)
        hBoxLayout.addStretch(1)
        self.leftLayout.addSpacing(5)
        self.leftLayout.addLayout(hBoxLayout)
        
        hBoxLayout=QHBoxLayout();hBoxLayout.addStretch(1)
        title=BodyLabel("Optimize Gamma:");title.setObjectName("ChooseTitle")
        hBoxLayout.addWidget(title)
        self.isOptimize=SwitchButton()
        self.isOptimize.toggleChecked()
        hBoxLayout.addWidget(self.isOptimize)
        hBoxLayout.addStretch(1)
        self.leftLayout.addSpacing(5)
        self.leftLayout.addLayout(hBoxLayout)
        
        hBoxLayout=QHBoxLayout();hBoxLayout.addStretch(1)
        title=BodyLabel("Gamma LB:");title.setObjectName('ChooseTitle')
        hBoxLayout.addWidget(title)
        self.lowLineEdit=LineEdit(self)
        self.lowLineEdit.setValidator(QDoubleValidator())
        self.lowLineEdit.setMaximumWidth(70)
        self.lowLineEdit.setText('0')
        hBoxLayout.addWidget(self.lowLineEdit)
        title=BodyLabel("Gamma UB:");title.setObjectName('ChooseTitle')
        hBoxLayout.addWidget(title)
        self.upLineEdit=LineEdit(self)
        self.upLineEdit.setValidator(QDoubleValidator())
        self.upLineEdit.setMaximumWidth(70)
        self.upLineEdit.setText('100')
        hBoxLayout.addWidget(self.upLineEdit)
        hBoxLayout.addStretch(1)
        self.leftLayout.addSpacing(5)
        self.leftLayout.addLayout(hBoxLayout)
        
        self.isOptimize.checkedChanged.connect(self.__onSwitchOPChanged)
    def __onSwitchOPChanged(self,isChecked):
        if isChecked:
            self.upLineEdit.setEnabled(True)
            self.lowLineEdit.setEnabled(True)
        else:
            self.lowLineEdit.setEnabled(False)
            self.upLineEdit.setEnabled(False)
    def paintEvent(self, e):
        super().paintEvent(e)
        painter = QPainter(self)
        pen=QPen(QColor(0, 0, 0,38.25),1)
        painter.setPen(pen)
        h=self.title.height()+15
        w=self.width()
        painter.drawLine(QPointF(0,h),QPointF(w,h))
class PolyCard(QFrame):
    def __init__(self, parent=None):
        super().__init__(parent)
        self.setObjectName("KernelView");self.setContentsMargins(5,0,5,5)
        self.leftLayout=QVBoxLayout(self);self.leftLayout.setAlignment(Qt.AlignmentFlag.AlignTop)
        self.title=BodyLabel("Kernel Parameter Card");self.title.setObjectName('CardTitle')
        self.leftLayout.addWidget(self.title,alignment=Qt.AlignmentFlag.AlignHCenter)
        
        hBoxLayout=QHBoxLayout()
        hBoxLayout.addSpacing(20);hBoxLayout.addStretch(1)
        title=BodyLabel("Degree:");title.setObjectName('ChooseTitle')
        hBoxLayout.addWidget(title,alignment=Qt.AlignmentFlag.AlignHCenter)
        self.degreeCombobox=ComboBox();self.degreeCombobox.addItems(["2","3","4"])
        hBoxLayout.addWidget(self.degreeCombobox,alignment=Qt.AlignmentFlag.AlignHCenter)
        # hBoxLayout.addStretch(1)
        # self.leftLayout.addSpacing(5)
        # self.leftLayout.addLayout(hBoxLayout)
        
        # hBoxLayout=QHBoxLayout()
        # hBoxLayout.addSpacing(20);hBoxLayout.addStretch(1)
        title=BodyLabel("Gamma:");title.setObjectName('ChooseTitle')
        hBoxLayout.addWidget(title,alignment=Qt.AlignmentFlag.AlignHCenter)
        self.lengthLineEdit=LineEdit(self)
        self.lengthLineEdit.setValidator(QDoubleValidator())
        self.lengthLineEdit.setMaximumWidth(100);self.lengthLineEdit.setText("1.00")
        hBoxLayout.addWidget(self.lengthLineEdit,alignment=Qt.AlignmentFlag.AlignHCenter)
        # hBoxLayout.addStretch(1)
        # self.leftLayout.addSpacing(5)
        # self.leftLayout.addLayout(hBoxLayout)
        
        # hBoxLayout=QHBoxLayout()
        # hBoxLayout.addSpacing(20);hBoxLayout.addStretch(1)
        title=BodyLabel("C0:");title.setObjectName('ChooseTitle')
        hBoxLayout.addWidget(title,alignment=Qt.AlignmentFlag.AlignHCenter)
        self.lengthLineEdit=LineEdit(self)
        self.lengthLineEdit.setValidator(QDoubleValidator())
        self.lengthLineEdit.setMaximumWidth(100);self.lengthLineEdit.setText("1.00")
        hBoxLayout.addWidget(self.lengthLineEdit,alignment=Qt.AlignmentFlag.AlignHCenter)
        hBoxLayout.addStretch(1)
        self.leftLayout.addSpacing(5)
        self.leftLayout.addLayout(hBoxLayout)
        
        hBoxLayout=QHBoxLayout();hBoxLayout.addStretch(1)
        title=BodyLabel("Optimize Gamma & C0:");title.setObjectName("ChooseTitle")
        hBoxLayout.addWidget(title)
        self.isOptimize=SwitchButton()
        self.isOptimize.toggleChecked()
        hBoxLayout.addWidget(self.isOptimize)
        hBoxLayout.addStretch(1)
        self.leftLayout.addSpacing(5)
        self.leftLayout.addLayout(hBoxLayout)
        
        hBoxLayout=QHBoxLayout();hBoxLayout.addStretch(1)
        title=BodyLabel("Gamma & C0 LB:");title.setObjectName('ChooseTitle')
        hBoxLayout.addWidget(title)
        self.lowLineEdit=LineEdit(self)
        self.lowLineEdit.setValidator(QDoubleValidator())
        self.lowLineEdit.setMaximumWidth(70)
        self.lowLineEdit.setText('0')
        hBoxLayout.addWidget(self.lowLineEdit)
        title=BodyLabel("Gamma & C0 UB:");title.setObjectName('ChooseTitle')
        hBoxLayout.addWidget(title)
        self.upLineEdit=LineEdit(self)
        self.upLineEdit.setValidator(QDoubleValidator())
        self.upLineEdit.setMaximumWidth(70)
        self.upLineEdit.setText('100')
        hBoxLayout.addWidget(self.upLineEdit)
        hBoxLayout.addStretch(1)
        self.leftLayout.addSpacing(5)
        self.leftLayout.addLayout(hBoxLayout)
        
        self.isOptimize.checkedChanged.connect(self.__onSwitchOPChanged)
    def __onSwitchOPChanged(self,isChecked):
        if isChecked:
            self.upLineEdit.setEnabled(True)
            self.lowLineEdit.setEnabled(True)
        else:
            self.lowLineEdit.setEnabled(False)
            self.upLineEdit.setEnabled(False)
    def paintEvent(self, e):
        super().paintEvent(e)
        painter = QPainter(self)
        pen=QPen(QColor(0, 0, 0,38.25),1)
        painter.setPen(pen)
        h=self.title.height()+15
        w=self.width()
        painter.drawLine(QPointF(0,h),QPointF(w,h))