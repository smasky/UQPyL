from PySide6.QtCore import Qt,QPointF
from PySide6.QtGui import QDoubleValidator,QPainter,QPen,QColor,QIntValidator
from PySide6.QtWidgets import QWidget,QVBoxLayout,QHBoxLayout,QFrame,QSizePolicy
from qfluentwidgets import (BodyLabel,LineEdit,SwitchButton,PillPushButton,FlowLayout,SpinBox,ComboBox)

class OneLayerCard(QFrame):
    def __init__(self, parent=None):
        super().__init__(parent)
        self.setObjectName("KernelView");self.setContentsMargins(5,0,5,5)
        self.leftLayout=QVBoxLayout(self);self.leftLayout.setAlignment(Qt.AlignmentFlag.AlignTop)
        self.title=BodyLabel("Hidden Layer Parameter Card");self.title.setObjectName('CardTitle')
        self.leftLayout.addWidget(self.title,alignment=Qt.AlignmentFlag.AlignHCenter)
        self.leftLayout.addStretch(1)
        
        hBoxLayout=QHBoxLayout();hBoxLayout.addStretch(1)
        title=BodyLabel("Layer1");title.setObjectName('ChooseTitle')
        hBoxLayout.addWidget(title,alignment=Qt.AlignmentFlag.AlignHCenter);hBoxLayout.addSpacing(10)
        title=BodyLabel("N_Neuron:");title.setObjectName('ChooseTitle')
        hBoxLayout.addWidget(title,alignment=Qt.AlignmentFlag.AlignHCenter)
        self.lengthLineEdit=LineEdit(self)
        self.lengthLineEdit.setValidator(QIntValidator())
        self.lengthLineEdit.setMaximumWidth(60);self.lengthLineEdit.setText("10")
        hBoxLayout.addWidget(self.lengthLineEdit,alignment=Qt.AlignmentFlag.AlignHCenter)
        title=BodyLabel("Activation Function:");title.setObjectName('ChooseTitle')
        hBoxLayout.addWidget(title,alignment=Qt.AlignmentFlag.AlignHCenter)
        self.activationCombobox=ComboBox();self.activationCombobox.addItems(["Identity", "Logistic", "Tanh", "Relu"])
        self.activationCombobox.setMinimumWidth(100)
        hBoxLayout.addWidget(self.activationCombobox)
        hBoxLayout.addStretch(1)
        self.leftLayout.addSpacing(5)
        self.leftLayout.addLayout(hBoxLayout)
        self.leftLayout.addStretch(1)
    def paintEvent(self, e):
        super().paintEvent(e)
        painter = QPainter(self)
        pen=QPen(QColor(0, 0, 0,38.25),1)
        painter.setPen(pen)
        h=self.title.height()+15
        w=self.width()
        painter.drawLine(QPointF(0,h),QPointF(w,h))
class TwoLayerCard(QFrame):
    def __init__(self, parent=None):
        super().__init__(parent)
        self.setObjectName("KernelView");self.setContentsMargins(5,0,5,5)
        self.leftLayout=QVBoxLayout(self);self.leftLayout.setAlignment(Qt.AlignmentFlag.AlignTop)
        self.title=BodyLabel("Hidden Layer Parameter Card");self.title.setObjectName('CardTitle')
        self.leftLayout.addWidget(self.title,alignment=Qt.AlignmentFlag.AlignHCenter)
        self.leftLayout.addStretch(1)
        
        hBoxLayout=QHBoxLayout();hBoxLayout.addStretch(1)
        title=BodyLabel("Layer1");title.setObjectName('ChooseTitle')
        hBoxLayout.addWidget(title,alignment=Qt.AlignmentFlag.AlignHCenter);hBoxLayout.addSpacing(10)
        title=BodyLabel("N_Neuron:");title.setObjectName('ChooseTitle')
        hBoxLayout.addWidget(title,alignment=Qt.AlignmentFlag.AlignHCenter)
        self.lengthLineEdit1=LineEdit(self)
        self.lengthLineEdit1.setValidator(QIntValidator())
        self.lengthLineEdit1.setMaximumWidth(60);self.lengthLineEdit1.setText("10")
        hBoxLayout.addWidget(self.lengthLineEdit1,alignment=Qt.AlignmentFlag.AlignHCenter)
        title=BodyLabel("Activation Function:");title.setObjectName('ChooseTitle')
        hBoxLayout.addWidget(title,alignment=Qt.AlignmentFlag.AlignHCenter)
        self.activationCombobox=ComboBox();self.activationCombobox.addItems(["Identity", "Logistic", "Tanh", "Relu"])
        self.activationCombobox.setMinimumWidth(100)
        hBoxLayout.addWidget(self.activationCombobox)
        hBoxLayout.addStretch(1)
        self.leftLayout.addSpacing(5)
        self.leftLayout.addLayout(hBoxLayout)
        
        hBoxLayout=QHBoxLayout();hBoxLayout.addStretch(1)
        title=BodyLabel("Layer2");title.setObjectName('ChooseTitle')
        hBoxLayout.addWidget(title,alignment=Qt.AlignmentFlag.AlignHCenter);hBoxLayout.addSpacing(10)
        title=BodyLabel("N_Neuron:");title.setObjectName('ChooseTitle')
        hBoxLayout.addWidget(title,alignment=Qt.AlignmentFlag.AlignHCenter)
        self.lengthLineEdit2=LineEdit(self)
        self.lengthLineEdit2.setValidator(QIntValidator())
        self.lengthLineEdit2.setMaximumWidth(60);self.lengthLineEdit2.setText("10")
        hBoxLayout.addWidget(self.lengthLineEdit2,alignment=Qt.AlignmentFlag.AlignHCenter)
        title=BodyLabel("Activation Function:");title.setObjectName('ChooseTitle')
        hBoxLayout.addWidget(title,alignment=Qt.AlignmentFlag.AlignHCenter)
        self.activationCombobox=ComboBox();self.activationCombobox.addItems(["Identity", "Logistic", "Tanh", "Relu"])
        self.activationCombobox.setMinimumWidth(100)
        hBoxLayout.addWidget(self.activationCombobox)
        hBoxLayout.addStretch(1)
        self.leftLayout.addSpacing(5)
        self.leftLayout.addLayout(hBoxLayout)
        
        self.leftLayout.addStretch(1)
    def paintEvent(self, e):
        super().paintEvent(e)
        painter = QPainter(self)
        pen=QPen(QColor(0, 0, 0,38.25),1)
        painter.setPen(pen)
        h=self.title.height()+15
        w=self.width()
        painter.drawLine(QPointF(0,h),QPointF(w,h))
class ThreeLayerCard(QFrame):
    def __init__(self, parent=None):
        super().__init__(parent)
        self.setObjectName("KernelView");self.setContentsMargins(5,0,5,2)
        self.leftLayout=QVBoxLayout(self);self.leftLayout.setAlignment(Qt.AlignmentFlag.AlignTop)
        self.title=BodyLabel("Hidden Layer Parameter Card");self.title.setObjectName('CardTitle')
        self.leftLayout.addWidget(self.title,alignment=Qt.AlignmentFlag.AlignHCenter)
        self.leftLayout.addStretch(1)
        
        hBoxLayout=QHBoxLayout();hBoxLayout.addStretch(1)
        title=BodyLabel("Layer1");title.setObjectName('ChooseTitle')
        hBoxLayout.addWidget(title,alignment=Qt.AlignmentFlag.AlignHCenter);hBoxLayout.addSpacing(10)
        title=BodyLabel("N_Neuron:");title.setObjectName('ChooseTitle')
        hBoxLayout.addWidget(title,alignment=Qt.AlignmentFlag.AlignHCenter)
        self.lengthLineEdit1=LineEdit(self)
        self.lengthLineEdit1.setValidator(QIntValidator())
        self.lengthLineEdit1.setMaximumWidth(60);self.lengthLineEdit1.setText("10")
        hBoxLayout.addWidget(self.lengthLineEdit1,alignment=Qt.AlignmentFlag.AlignHCenter)
        title=BodyLabel("Activation Function:");title.setObjectName('ChooseTitle')
        hBoxLayout.addWidget(title,alignment=Qt.AlignmentFlag.AlignHCenter)
        self.activationCombobox=ComboBox();self.activationCombobox.addItems(["Identity", "Logistic", "Tanh", "Relu"])
        self.activationCombobox.setMinimumWidth(100)
        hBoxLayout.addWidget(self.activationCombobox)
        hBoxLayout.addStretch(1)
        self.leftLayout.addSpacing(3)
        self.leftLayout.addLayout(hBoxLayout)
        
        hBoxLayout=QHBoxLayout();hBoxLayout.addStretch(1)
        title=BodyLabel("Layer2");title.setObjectName('ChooseTitle')
        hBoxLayout.addWidget(title,alignment=Qt.AlignmentFlag.AlignHCenter);hBoxLayout.addSpacing(10)
        title=BodyLabel("N_Neuron:");title.setObjectName('ChooseTitle')
        hBoxLayout.addWidget(title,alignment=Qt.AlignmentFlag.AlignHCenter)
        self.lengthLineEdit2=LineEdit(self)
        self.lengthLineEdit2.setValidator(QIntValidator())
        self.lengthLineEdit2.setMaximumWidth(60);self.lengthLineEdit2.setText("10")
        hBoxLayout.addWidget(self.lengthLineEdit2,alignment=Qt.AlignmentFlag.AlignHCenter)
        title=BodyLabel("Activation Function:");title.setObjectName('ChooseTitle')
        hBoxLayout.addWidget(title,alignment=Qt.AlignmentFlag.AlignHCenter)
        self.activationCombobox=ComboBox();self.activationCombobox.addItems(["Identity", "Logistic", "Tanh", "Relu"])
        self.activationCombobox.setMinimumWidth(100)
        hBoxLayout.addWidget(self.activationCombobox)
        hBoxLayout.addStretch(1)
        self.leftLayout.addSpacing(3)
        self.leftLayout.addLayout(hBoxLayout)
        
        hBoxLayout=QHBoxLayout();hBoxLayout.addStretch(1)
        title=BodyLabel("Layer3");title.setObjectName('ChooseTitle')
        hBoxLayout.addWidget(title,alignment=Qt.AlignmentFlag.AlignHCenter);hBoxLayout.addSpacing(10)
        title=BodyLabel("N_Neuron:");title.setObjectName('ChooseTitle')
        hBoxLayout.addWidget(title,alignment=Qt.AlignmentFlag.AlignHCenter)
        self.lengthLineEdit3=LineEdit(self)
        self.lengthLineEdit3.setValidator(QIntValidator())
        self.lengthLineEdit3.setMaximumWidth(60);self.lengthLineEdit3.setText("10")
        hBoxLayout.addWidget(self.lengthLineEdit3,alignment=Qt.AlignmentFlag.AlignHCenter)
        title=BodyLabel("Activation Function:");title.setObjectName('ChooseTitle')
        hBoxLayout.addWidget(title,alignment=Qt.AlignmentFlag.AlignHCenter)
        self.activationCombobox=ComboBox();self.activationCombobox.addItems(["Identity", "Logistic", "Tanh", "Relu"])
        self.activationCombobox.setMinimumWidth(100)
        hBoxLayout.addWidget(self.activationCombobox)
        hBoxLayout.addStretch(1)
        self.leftLayout.addSpacing(3)
        self.leftLayout.addLayout(hBoxLayout)
        
        self.leftLayout.addStretch(1)
    def paintEvent(self, e):
        super().paintEvent(e)
        painter = QPainter(self)
        pen=QPen(QColor(0, 0, 0,38.25),1)
        painter.setPen(pen)
        h=self.title.height()+15
        w=self.width()
        painter.drawLine(QPointF(0,h),QPointF(w,h))