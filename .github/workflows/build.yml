name: CI build for PyPI

on:
  push:
    branches:
      - master

jobs:
  build:
    strategy:
      matrix:
        python-version: [3.8]
        buildplat:
          - platform: ubuntu-22.04
            manylinux_type: manylinux
            arch: x86_64
          - platform: ubuntu-22.04
            manylinux_type: musllinux
            arch: x86_64
          - platform: windows-2019
            manylinux_type: ""
            os_name: win
            arch: AMD64

        python: [["cp36", "3.6"],["cp37", "3.7"],["cp38", "3.8"],["cp39", "3.9"],["cp310", "3.10"], ["cp311", "3.11"], ["cp312", "3.12"]]

    runs-on: ${{ matrix.buildplat.platform }}

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install common dependencies
      run: |
        pip install Cython numpy pybind11 scipy

    - name: Install C++ compiler (Windows)
      if: matrix.buildplat.os_name == 'win'
      uses: msys2/setup-msys2@v2
      with:
        install: mingw64/mingw-w64-x86_64-gcc

    - name: Prepare CIBW_BUILD variable
      id: prepare_cibuildwheel_var
      run: |
        echo "::set-env name=CIBW_BUILD::${{ format('{0}-{1}*', matrix.python[0], matrix.buildplat.manylinux_type) if matrix.buildplat.manylinux_type != '' else '{0}-' + matrix.buildplat.os_name + '*' }}"
        echo "::set-env name=CIBW_ARCHS::${{ matrix.buildplat.arch }}"

    - name: Build wheels with cibuildwheel
      env:
        CIBW_BUILD: ${{ env.CIBW_BUILD }}
        CIBW_ARCHS: ${{ env.CIBW_ARCHS }}
      run: |
        pip install cibuildwheel
        if [ "${{ matrix.buildplat.platform }}" = "windows-2019" ]; then
          cibuildwheel --output-dir wheelhouse --platform windows --arch ${{ matrix.buildplat.arch }}
        else
          cibuildwheel --output-dir wheelhouse --platform linux --arch ${{ matrix.buildplat.arch }} --manylinux ${{ matrix.buildplat.manylinux_type }}
        fi

    - name: Save Wheel Package as Artifact
      uses: actions/upload-artifact@v2
      with:
        name: wheelhouse
        path: wheelhouse/*.whl