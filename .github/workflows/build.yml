name: CI build for pypi

on:
  push:
    branches:
      - master

jobs:
  build:
    strategy:
      matrix:
        python-version: [3.8]
        buildplat:
        # should also be able to do multi-archs on a single entry, e.g.
        # [windows-2019, win*, "AMD64 x86"]. However, those two require a different compiler setup
        # so easier to separate out here.
        - [ubuntu-22.04, manylinux, x86_64]
        - [ubuntu-22.04, musllinux, x86_64]
        - [windows-2019, win, AMD64]

        python: [["cp310", "3.10"], ["cp311", "3.11"], ["cp312", "3.12"]]


    runs-on: ${{ matrix.buildplat[0] }}

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Cython
      run: |
        pip install Cython

    - name: Install Cython
      run: |
          pip install numpy
          
    - name: Install pybind11
      run: |
        pip install pybind11

    - name: Install scipy
      run: |
        pip install scipy

    - name: Install C++ compiler (Windows)
      if: matrix.os == 'windows-latest'
      uses: msys2/setup-msys2@v2
      with:
        install: mingw64/mingw-w64-x86_64-gcc

    - name: Install dependencies and build package
      run: |
        python setup.py build_ext --inplace

    - name: Build wheels with cibuildwheel
      env:
        CIBW_BUILD: ${{ matrix.python[0] }}-${{ matrix.buildplat[1] }}*
        CIBW_ARCHS: ${{ matrix.buildplat[2] }}
      if: matrix.os == 'windows-latest'
      run: |
        pip install cibuildwheel
        cibuildwheel --output-dir wheelhouse --platform windows --arch amd64

    # 当os为非windows时执行此步（即Linux）
    - name: Build wheels with cibuildwheel (Linux)
      if: matrix.os != 'windows-latest'
      env:
        CIBW_BUILD: ${{ matrix.python[0] }}-${{ matrix.buildplat[1] }}*
        CIBW_ARCHS: ${{ matrix.buildplat[2] }}
      run: |
        pip install cibuildwheel
        cibuildwheel --output-dir wheelhouse --platform linux --arch x86_64

    - name: Save Wheel Package as Artifact
      uses: actions/upload-artifact@v2
      with:
        name: wheelhouse
        path: wheelhouse/*.whl